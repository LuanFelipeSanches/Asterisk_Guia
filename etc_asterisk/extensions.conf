[general]
[globals]
UserA_DeskPhone=PJSIP/0000f30A0A01
UserA_SoftPhone=PJSIP/SOFTPHONE_A
UserB_DeskPhone=PJSIP/0000f30B0B02
UserB_SoftPhone=PJSIP/SOFTPHONE_B

[sets]
;Login no Correio de voz
exten => *98,1,NoOp(Access voicemail retrieval.)
 same => n,VoiceMailMain()

exten => 100,1,Dial(${UserA_DeskPhone})

exten => 101,1,Dial(${UserA_SoftPhone})

exten => 102,1,Dial(${UserB_DeskPhone},10,m);tecnologia/ramal/timeout/musica de espera
 same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy:unavail);correio de voz
 same => n(unavail),VoiceMail(101@default,u)
 same => n,Hangup()
 same => n(busy),VoiceMail(101@default,b)
 same => n,Hangup()

exten => 103,1,Dial(${UserB_SoftPhone})
same => n,Voicemail(${EXTEN}@default,${IF($["${DIALSTATUS}" = "BUSY"]?b:u)});IF
 same => n,Hangup()

exten => 110,1,Dial(${UserA_DeskPhone}&${UserA_SoftPhone}&${UserB_SoftPhone});toca em todos os destinos informados

exten => 200,1,Answer()
 same => n,Playback(hello-world)
 same => n,Hangup()

exten => 201,1,Goto(TestMenu,start,1)

exten => _55512XX,1,Answer()
 same => n,Playback(tt-monkeys)
 same =>n,Hangup()

[TestMenu]
exten => start,Answer()
 same => n,Background(enter-ext-of-person)
 same => n,WaitExten(5);espera 5 segundos

exten => 1,1,Dial(${UserA_DeskPhone},10)
 same => n,Goto(TestMenu,start,1);repete o menu
same => n,Playback(vm-nobodyavail)
same => n,Hangup()

exten => 2,1,Dial(${UserA_SoftPhone},10)
 same => n,Goto(TestMenu,start,1);repete o menu
same => n,Playback(vm-nobodyavail)
same => n,Hangup()

exten => 3,1,Dial(${UserB_DeskPhone},10)
 same => n,Playback(vm-nobodyavail)
 same => n,Hangup()

exten => 4,1,Dial(PJSIP/SOFTPHONE_B,10)
 same => n,Playback(vm-nobodyavail)
 same => n,Hangup()

exten => 8,1,Directory(default,sets,f)
exten => 9,1,Directory(default,sets)

exten => i,1,Playback(pbx-invalid);use usuario selecionar opção valida vai para "i"
 same => n,Goto(TestMenu,start,1)

exten => t,1,Playback(please-try-again); se o usuario não selecionar nenhuma opção vai para "t" tempo padrão 10s
 same => n,Goto(TestMenu,start,1);

;Variaveis
exten => 203,1,Noop(say some digits)
same => n,Answer()
same => n,Set(SomeDigits=123)
same => n,SayDigits(${SomeDigits})
same => n,Wait(.25)
same => n,Set(SomeDigits=543)
same => n,SayDigits(${SomeDigits})

;Concatenação de variáveis
exten => 204,1,Answer()
same => n,Set(ONETWO=12)
same => n,Set(THREEFOUR=34)
same => n,SayDigits(${ONETWO}${THREEFOUR}) 
same => n,Wait(0.2)
same => n,Set(NOTFIVE=${THREEFOUR}${ONETWO}) 
same => n,SayNumber(${NOTFIVE})
same => n,Wait(0.2)
same => n,SayDigits(2${ONETWO}3) 

;ramais de 400 a 499
exten => _4XX,1,Noop(User Dialed ${EXTEN})
 same => n,Answer()
 same => n,SayDigits(${EXTEN})
 same => n,Hangup()
 
 ;Dialplan Avançado

; Explessões

exten => 321,Noop()
 same => n,Answer()
 same => n,Set(COUNT=3)
 same => n,Set(NEWCOUNT=$[${COUNT} + 1])
 same => n,SayNumber(${NEWCOUNT})

 ;Função dialplan LEN

exten => 205,1,Answer()
 same => n,SayDigits(123)
 same => n,SayDigits(123)
 same => n,SayNumber(${LEN(123)})

exten => 206,1,Answer()
 same => n,Set(TIMEOUT(response)=1)
 same => n,Background(enter-ext-of-person)
 same => n,WaitExten() ; TIMEOUT() definiu o valor como 1
 same => n,Playback(like_to_tell_valid_text)
 same => n,Set(TIMEOUT(response)=5)
 same => n,Background(enter-ext-of-person)
 same => n,WaitExten() ; Agora o valor deve ser 5 segundos
 same => n,Playback(like_to_tell_valid_text)
 same => n,Hangup()

exten => 207,1,Answer()
 same => n,Set(TIMEOUT(response)=1)
 same => n,SayNumber(${TIMEOUT(response)})
 same => n,Set(TIMEOUT(response)=5)
 same => n,SayNumber(${TIMEOUT(response)})
 same => n,Hangup()

;Desvio Condicional
exten => 209,1,Noop(Test use of conditional branching)
 same => n,GotoIf($[ ${RAND(0,1)} = 1 ]?:iguanas)
 same => n,Playback(weasels-eaten-phonesys) 
 same => n(iguanas),Playback(office-iguanas) 
 same => n,Hangup()

exten => 210,1,Noop(Test use of conditional branching to extensions)
 same => n,GotoIf($[ ${RAND(0,1)} = 1 ]?weasels,1:iguanas,1)
exten => weasels,1,Playback(weasels-eaten-phonesys) ; RAMAL DIFERENTE
 same => n,Hangup()
exten => iguanas,1,Playback(office-iguanas) ; TAMBÉM UM RAMAL DIFERENTE
 same => n,Hangup()

 ;GOTO() GOTOIF()
exten => 211,1,NoOp()
 same => n,Answer()
 same => n,Set(COUNT=5)
 same => n(start),GotoIf($[ ${COUNT} > 0 ]?:goodbye)
 same => n,SayNumber(${COUNT})
 same => n,Set(COUNT=$[ ${COUNT} - 1 ])
 same => n,Goto(start)
 same => n(goodbye),Playback(vm-goodbye)
 same => n,Hangup()



exten => 212,1,NoOp()
 same => n,GotoIf($[ ${TEST} != valid ]?error_handling)
 same => n,Hangup() ; We're getting an error and ending up here
 same => n(error_handling),Playback(goodbye)
 same => n,Hangup()

exten => 213,1,NoOp()
 same => n,GotoIf($[ "${TEST}" != "valid" ]?error_handling)
 same => n,Hangup()
 same => n(error_handling),Playback(goodbye)
 same => n,Hangup()

;FUNÇÃO CALLERID() PERMITE OBTER A INFORMAÇÃO DA ID DO CHAMADOR
exten => 214,1,NoOp(CALLERID(num): ${CALLERID(num)} CALLERID(name): ${CALLERID(name)})
 same => n,GotoIf($[ ${CALLERID(num)} = 8885551212 ]?reject:allow)
 same => n(allow),Dial(${UserA_DeskPhone})
 same => n,Hangup()
 same => n(reject),Playback(abandon-all-hope)
 same => n,Hangup(

;DESVIO CONDICIONAL BASEADO EM TEMPO GOTOIFTIME()
exten =>s,1,Noop()
 same => n,GotoIfTime(09:00-17:59,mon-fri,*,*open,s,1)

[closed]
exten => start,1,Noop(after hours handler)
 same =>n,Playback(go-away2)
 same =>n,Hangup()


[TestMenu2]
exten => start,1,Noop(main autoattendant)
 same => n,GotoIfTime(16:59-08:00,mon-fri,*,*?closed,start,1)
 same => n,GotoIfTime(11:59-09:00,sat,*,*?closed,start,1)
 same => n,GotoIfTime(00:00-23:59,sun,*,*?closed,start,1)
 same => n,Background(enter-ext-of-person)
 same => n,WaitExten(5);espera 5 segundos

exten => 1,1,Dial(${UserA_DeskPhone},10)
 same => n,Goto(TestMenu,start,1);repete o menu
same => n,Playback(vm-nobodyavail)
same => n,Hangup()

exten => 2,1,Dial(${UserA_SoftPhone},10)
 same => n,Goto(TestMenu,start,1);repete o menu
same => n,Playback(vm-nobodyavail)
same => n,Hangup()

exten => 3,1,Dial(${UserB_DeskPhone},10)
 same => n,Playback(vm-nobodyavail)
 same => n,Hangup()

exten => 4,1,Dial(PJSIP/SOFTPHONE_B,10)
 same => n,Playback(vm-nobodyavail)
 same => n,Hangup()

exten => 8,1,Directory(default,sets,f)
exten => 9,1,Directory(default,sets)

exten => i,1,Playback(pbx-invalid);use usuario selecionar opção valida vai para "i"
 same => n,Goto(TestMenu,start,1)

exten => t,1,Playback(please-try-again); se o usuario não selecionar nenhuma opção vai para "t" tempo padrão 10s
 same => n,Goto(TestMenu,start,1);

;SubRotina

[subDialUser]
exten => _[0-9].,1,Noop(Dial extension ${EXTEN},channel: ${ARG1}, mailbox: ${ARG2})
 same => n,Noop(mboxcontext: ${ARG3}, timeout ${ARG4})
 same => n,Dial(${ARG1},${ARG4})
 same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy:unavail)
 same => n(unavail),VoiceMail(${ARG2}@${ARG3},u)
 same => n,Hangup()
 same => n(busy),VoiceMail(${ARG2}@${ARG3},b)
 same => n,Hangup()

 [OLD_sets] 
exten => 100,1,Dial(${UserA_DeskPhone},12)
 same => n,Voicemail(100@default)
 same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy:unavail)


exten => 103,1,Dial(${UserB_SoftPhone})
 same => n,Hangup()
[sets]
;subDialUser args:
; - ARG1 канал(ы) для вызова
; - ARG2 почтовый ящик
; - ARG3 контекст почтового ящика
; - ARG4 Тайм-аут
exten => 100,1,Gosub(subDialUser,${EXTEN},1(${UserA_DeskPhone},${EXTEN},default,12))
exten => 101,1,Gosub(subDialUser,${EXTEN},1(${UserA_SoftPhone},${EXTEN},default,3))
exten => 102,1,Gosub(subDialUser,${EXTEN},1(${UserB_DeskPhone},${EXTEN},default,6))
exten => 103,1,Gosub(subDialUser,${EXTEN},1(${UserB_SoftPhone},${EXTEN},default,24))
exten => 110,1,Dial(${UserA_DeskPhone}&${UserA_SoftPhone}&${UserB_SoftPhone})
 same => n,Hangup()


;Estes são os requisitos:

;O telefone na recepção deve tocar imediatamente, e continuar ligando e não parar até ser atendido.
;Os telefones dos membros da equipe não devem tocar durante os primeiros 9 segundos, após os quais 
;eles podem ligar até que eles respondam.
;O telefone do dono só deve tocar se a chamada ficar sem resposta por 12 segundos. Além disso, 
;fingimos que é um celular, e então temos que parar de ligar 
;depois de 18 segundos para que a caixa postal do celular não atenda a chamada.
 [subDialDelay]
exten => _[a-zA-Z0-9].,1,Noop(channel ${ARG1}, pre-delay ${ARG2}, timeout ${ARG3})
; same => n,Progress() ; Optional; Signals back that the call is proceeding
 same => n,Wait(${ARG2}) ; how long to wait before dialing
 same => n,Dial(${ARG1},${ARG3}) ; timeout can be blank (infinite)
 same => n,Hangup()

 ;LOCAL CHANNELS
[localDialDelay]
exten => receptionist,1,Gosub(subDialDelay,${EXTEN},1(${UserA_DeskPhone},0,600))
exten => team_one,1,Gosub(subDialDelay,${EXTEN},1(${UserA_SoftPhone},9,600))
exten => team_two,1,Gosub(subDialDelay,${EXTEN},1(${UserB_DeskPhone},9,600))
exten => owner,1,Gosub(subDialDelay,${EXTEN},1(${UserB_SoftPhone},12,18))

exten => 103,1,Gosub(subDialUser,${EXTEN},1(${UserB_SoftPhone},${EXTEN},default,24))

; Eles foram projetados para serem testados individualmente antes de colocá-los juntos.
exten => 104,1,Dial(Local/receptionist@localDialDelay)
exten => 105,1,Dial(Local/team_one@localDialDelay)
exten => 106,1,Dial(Local/team_two@localDialDelay)
exten => 107,1,Dial(Local/owner@localDialDelay)

exten => 107,1,Dial(Local/owner@localDialDelay)

; Vamos atribuir algumas variáveis,
; para manter a sequência de discagem fácil de ler
exten => 108,1,Noop(DialDelay)
 same => n,Set(Recpn=Local/receptionist@localDialDelay)
 same => n,Set(Team1=Local/team_one@localDialDelay)
 same => n,Set(Team2=Local/team_two@localDialDelay)
 same => n,Set(Boss=Local/owner@localDialDelay)
 same => n,Dial(${Recpn}&${Team1}&${Team2}&${Boss},600)

 ;Canal()
exten => 223,1,Noop(CHANNEL function)
 same => n,Answer()
 same => n,Noop(CHANNEL(name) is ${CHANNEL(name)})
 same => n,Noop(CHANNEL(musicclass) is ${CHANNEL(musicclass)})
 same => n,Noop(CHANNEL(rtcp,all_jitter) is ${CHANNEL(rtcp,all_jitter)})
 same => n,Noop(CHANNEL(rtcp,all_loss) is ${CHANNEL(rtcp,all_loss)})
 same => n,Noop(CHANNEL(rtcp,all_rtt) is ${CHANNEL(rtcp,all_rtt)})
 same => n,Noop(CHANNEL(rtcp,txcount) is ${CHANNEL(rtcp,txcount)})
 same => n,Noop(CHANNEL(rtcp,rxcount) is ${CHANNEL(rtcp,rxcount)})
 same => n,Noop(CHANNEL(pjsip,local_uri) is ${CHANNEL(pjsip,local_uri)})
 same => n,Noop(CHANNEL(pjsip,remote_uri) is ${CHANNEL(pjsip,remote_uri)})
 same => n,Noop(CHANNEL(pjsip,request_uri) is ${CHANNEL(pjsip,request_uri)})
 same => n,Noop(CHANNEL(pjsip,local_tag) is ${CHANNEL(pjsip,local_tag)})
 
 ;CURL()
exten => 224,1,Noop(CURL function)
 same => n,Set(ExternalIP=${CURL(http://whatismyip.akamai.com)})
 same => n,Noop(The external IP address is ${ExternalIP})

 ;CUT()
exten => 225,1,Noop(CUT function)
 same => n,Set(ExternalIP=${CURL(http://whatismyip.akamai.com)})
 same => n,Noop(The external IP address is ${ExternalIP})
 same => n,Answer()
 same => n,SayDigits(=${CUT(ExternalIP,.,1)})
 same => n,Playback(letters/dot)
 same => n,SayDigits(=${CUT(ExternalIP,.,2)})
 same => n,Playback(letters/dot)
 same => n,SayDigits(=${CUT(ExternalIP,.,3)})
 same => n,Playback(letters/dot)
 same => n,SayDigits(=${CUT(ExternalIP,.,4)})
